name: Pull and Publish Docker Image

on:
  push:
    branches: [dev, main, RB-*]
  workflow_dispatch: 
    inputs:
      model_artifact_run_id:
        description: 'Run ID of the CT workflow that produced the model.pkl artifact'
        required: false 
      target_branch:
        description: 'The target branch context for this build (e.g., dev)'
        required: false 

jobs:
  build-test-publish:
    runs-on: self-hosted
    steps:
    - name: Determine Branch for Checkout
      id: checkout_branch
      run: |
        if [[ "${{ github.event_name }}" == "workflow_dispatch" && "${{ github.event.inputs.target_branch }}" != "" ]]; then
          echo "branch=${{ github.event.inputs.target_branch }}" >> $GITHUB_OUTPUT
        else
          echo "branch=${GITHUB_REF#refs/heads/}" >> $GITHUB_OUTPUT
        fi
        echo "Checkout branch set to: $(cat $GITHUB_OUTPUT | grep branch= | cut -d'=' -f2)"

    - name: Checkout Code
      uses: actions/checkout@v4
      with:
        ref: ${{ steps.checkout_branch.outputs.branch }}

    - name: Download model artifact (if triggered by CT for retraining)
      if: github.event_name == 'workflow_dispatch' && github.event.inputs.model_artifact_run_id != ''
      uses: actions/download-artifact@v4 
      with:
        name: trained-model 
        run-id: ${{ github.event.inputs.model_artifact_run_id }}
        path: .
        github-token: ${{ secrets.PAT_TOKEN }}



    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

    - name: Set image tags
      id: settags
      run: |
        BRANCH_NAME="${{ steps.checkout_branch.outputs.branch }}"
        
        if [[ "$BRANCH_NAME" == "main" ]]; then
          ENV_TAG="prod"
        elif [[ "$BRANCH_NAME" == "dev" ]]; then
          ENV_TAG="dev"
        else
          SANITIZED_BRANCH_NAME=$(echo "$BRANCH_NAME" | sed 's/[^a-zA-Z0-9_.-]/-/g' | cut -c1-128)
          ENV_TAG="feat-${SANITIZED_BRANCH_NAME}"
        fi

        VERSION_TAG="${ENV_TAG}-${GITHUB_RUN_NUMBER}"
        
        if [[ "${{ github.event_name }}" == "workflow_dispatch" && "${{ github.event.inputs.model_artifact_run_id }}" != "" ]]; then
          echo "INFO: This build (CI Run ${GITHUB_RUN_NUMBER}) is using model.pkl from CT Run ID ${{ github.event.inputs.model_artifact_run_id }}."
          echo "INFO: For promotion, look for image tag: ${{ secrets.DOCKER_USERNAME }}/mental-health:${VERSION_TAG}"
        fi

        echo "ENV_TAG=${ENV_TAG}" >> $GITHUB_ENV
        echo "VERSION_TAG=${VERSION_TAG}" >> $GITHUB_ENV
        echo "Building with ENV_TAG: ${ENV_TAG} and VERSION_TAG: ${VERSION_TAG}"

    - name: Build Docker image
      run: |
        docker build . \
          -t ${{ secrets.DOCKER_USERNAME }}/mental-health:${{ env.VERSION_TAG }} \
          -t ${{ secrets.DOCKER_USERNAME }}/mental-health:${{ env.ENV_TAG }}

    - name: Push Docker images
      run: |
        docker push ${{ secrets.DOCKER_USERNAME }}/mental-health:${{ env.VERSION_TAG }}
        if [[ "${{ env.ENV_TAG }}" == "dev" || "${{ env.ENV_TAG }}" == "prod" ]]; then
          docker push ${{ secrets.DOCKER_USERNAME }}/mental-health:${{ env.ENV_TAG }}
        fi
        echo "Pushed image: ${{ secrets.DOCKER_USERNAME }}/mental-health:${{ env.VERSION_TAG }}"
        if [[ "${{ env.ENV_TAG }}" == "dev" || "${{ env.ENV_TAG }}" == "prod" ]]; then
          echo "Also pushed image: ${{ secrets.DOCKER_USERNAME }}/mental-health:${{ env.ENV_TAG }}"
          
        fi
    - name: Trigger Redeploy to Dev Environment (for Retrained Model from CT)
      if: |
        github.event_name == 'workflow_dispatch' &&
        github.event.inputs.target_branch == 'dev' &&
        github.event.inputs.model_artifact_run_id != ''
      uses: peter-evans/repository-dispatch@v3
      with:
        token: ${{ secrets.PAT_TOKEN }}
        event-type: redeploy
        client-payload: '{
          "image_tag": "${{ env.ENV_TAG }}", 
          "environment": "${{ env.ENV_TAG }}"
        }'
